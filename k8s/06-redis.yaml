---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-conf
data:
  redis-config: |
    tcp-backlog 128
    maxmemory-policy allkeys-lru
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: kube-ops-view-redis
  name: kube-ops-view-redis
spec:
  selector:
    application: kube-ops-view-redis
  type: ClusterIP
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: kube-ops-view-redis
    version: v0.0.1
  name: kube-ops-view-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-ops-view-redis
  template:
    metadata:
      labels:
        application: kube-ops-view-redis
        version: v0.0.1
    spec:
      containers:
      - name: redis
        image: redis:5-alpine
        command:
          - redis-server
          - "/redis-master/redis.conf"
        env:
          - name: MASTER
            value: "true"
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 6379
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
          - mountPath: /redis-master-data
            name: data
          - mountPath: /redis-master
            name: config
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          # we need to use the "redis" uid
          runAsUser: 100
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: redis-conf
            items:
              - key: redis-config
                path: redis.conf
